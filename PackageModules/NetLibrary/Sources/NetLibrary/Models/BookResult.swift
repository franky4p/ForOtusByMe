//
// BookResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BookResult: Codable, JSONEncodable, Hashable {

    public var key: String
    public var title: String?
    public var publishDate: String?
    public var physicalFormat: String?
    public var isbn10: [String]?

    public init(key: String, title: String? = nil, publishDate: String? = nil, physicalFormat: String? = nil, isbn10: [String]? = nil) {
        self.key = key
        self.title = title
        self.publishDate = publishDate
        self.physicalFormat = physicalFormat
        self.isbn10 = isbn10
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case key
        case title
        case publishDate = "publish_date"
        case physicalFormat = "physical_format"
        case isbn10 = "isbn_10"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(key, forKey: .key)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(publishDate, forKey: .publishDate)
        try container.encodeIfPresent(physicalFormat, forKey: .physicalFormat)
        try container.encodeIfPresent(isbn10, forKey: .isbn10)
    }
}

